image: docker:git
services:
  - docker:dind

stages:
  - deploy
  - build
  - catapult
  - release

variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dsonar.host.url=$SONAR_HOST_URL"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=./.m2/repository -Pprod -Dnexus.url=$NEXUS_URL -Dnexus.login=$NEXUS_USERNAME -Dnexus.pwd=$NEXUS_PASSWORD -Djava.awt.headless=true --batch-mode --errors --fail-at-end --show-version"
  CONTAINER_TEST_IMAGE: $CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_PROJECT_PATH:latest

cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_PROJECT_PATH"

maven-deploy:
  stage: deploy
  image: maven:3-jdk-8
  script: "mvn clean deploy $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/*.war
  only:
    variables:
      - $CI_COMMIT_MESSAGE !~ /prepare release/ && $CI_COMMIT_MESSAGE !~ /prepare for next development iteration/
    refs:
      - master

maven-install:
  stage: deploy
  image: maven:3-jdk-8
  script: "mvn clean install $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/*.war
  except:
    - master
    - tags

#Ad ogni nuovo tag viene fatta la push sul docker hub.
docker-build-push-hub:
  stage: build
  script:
    - docker build -t $CI_PROJECT_NAME:$CI_COMMIT_REF_NAME .
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_REF_NAME $DOCKER_HUB_ORGANIZATION/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_REF_NAME $DOCKER_HUB_ORGANIZATION/$CI_PROJECT_NAME:latest
    - docker push $DOCKER_HUB_ORGANIZATION/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
    - docker push $DOCKER_HUB_ORGANIZATION/$CI_PROJECT_NAME:latest
  only:
    - tags

#Ad ogni nuovo commit sul master viene fatta la push sul docker registry locale.
docker-build-push-master:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker tag $CONTAINER_TEST_IMAGE $CI_REGISTRY/$CONTAINER_RELEASE_IMAGE
    - docker push $CI_REGISTRY/$CONTAINER_RELEASE_IMAGE
  only:
    variables:
      - $CI_COMMIT_MESSAGE !~ /prepare release/ && $CI_COMMIT_MESSAGE !~ /prepare for next development iteration/
    refs:
      - master


#Ad ogni nuovo commit sul branch viene fatta la push sul docker registry locale.
docker-build-push-branches:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker tag $CONTAINER_TEST_IMAGE $CI_REGISTRY/$CONTAINER_TEST_IMAGE
    - docker push $CI_REGISTRY/$CONTAINER_TEST_IMAGE
  except:
    - tags
    - master

#Aggiorno il container con l'immagine docker creata.
catapult-deploy-image:
  stage: catapult
  dependencies:
    - docker-build-push-branches
    - docker-build-push-master
  before_script:
    - apk add --update curl curl-dev && rm -rf /var/cache/apk/*
  script:
    - >
      curl --fail -s -X POST $CATAPULT_URL -H 'Content-type:application/json' --data '{"id":"'"$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME"'", "git":true}'
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /prepare release/ || $CI_COMMIT_MESSAGE =~ /prepare for next development iteration/
    refs:
      - tags

#la release Ã¨ opzionale e manuale.
perform-maven-release:
  stage: release
  image: maven:3-jdk-8
  script:
    - eval `ssh-agent -s`
    - ssh-add <(echo "$GIT_SSH_PRIV_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.email "marco.spasiano@cnr.it"
    - git config --global user.name "marco.spasiano"
    - git checkout -B "$CI_BUILD_REF_NAME"
    - mvn $MAVEN_CLI_OPTS release:clean release:prepare -DreleaseVersion=$MAVEN_RELEASE_VERSION -Darguments="-DskipTests" -Dresume=false -B
    - mvn $MAVEN_CLI_OPTS release:perform -Darguments="-DskipTests" -Dresume=false -B
  only:
    variables:
      - $CI_COMMIT_MESSAGE !~ /prepare release/ && $CI_COMMIT_MESSAGE !~ /prepare for next development iteration/
    refs:
      - master
  when: manual
